<!doctype html>
<html lang='en'>
<head>
  <meta charset='utf-8'>
  <title><%= @story.name %></title>
  <meta name='description' content='Made With Placemark Story: the easiest way to create and share interactive map stories'>
  <meta name='keywords' content='Key, Words, For, Search, Engines'>
  <meta name='author' content='Nick Bumbarger'>
  <%= javascript_include_tag 'application', 'data-turbolinks-track'=> true %>
  <%= csrf_meta_tags %>
  <script src='https://api.tiles.mapbox.com/mapbox.js/v2.1.9/mapbox.js'></script>
  <link href='https://api.tiles.mapbox.com/mapbox.js/v2.1.9/mapbox.css' rel='stylesheet' />
  <style>
    body { 
      font-family: 'Helvetica Neue', Helvetica, Arial, 'Lucida Grande', sans-serif;;
      margin: 0; 
      padding: 0;
    }
    #map {
      position: absolute;
      top: 0;
      bottom: 0;
      width: 100%;
    }
    #marker-list {
      position: absolute;
      top: 0;
      bottom: 0;
      right: 0;
      width: 250px;
      margin: 0;
      padding: 5px;
      background: rgba(0, 0, 0, 0.5);
    }
    #marker-list li {
      padding: 5px 5px 5px 15px;
      color: rgb(255, 255, 255);
      font-size: 16px;
      letter-spacing: 3px;
      list-style-type: none;
    }
    #marker-list li:hover {
      background: rgb(0, 0, 0);
    }
    .truncate{
      width: 350px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      color: rgba(255, 255, 255, 0.5);
    }
    .leaflet-popup-content-wrapper {
      background: rgba(0, 0, 0, 0.65);
      color: rgb(255, 255, 255);
      border-radius: 5px;
    }
    .leaflet-popup-content-wrapper h2 {
      font-size:16px;
    }
    .leaflet-popup-content-wrapper img { 
      width: 360px;
      height: 222px;
    }
    .leaflet-popup-content-wrapper p {
      font-size: 14px;
      margin: 6px 0 0 0;

    }
    .leaflet-popup-content-wrapper a { 
      font-size: 14px;
      font-weight: normal;
      text-decoration: underline;
      color: rgba(255, 255, 255, 0.5);
    }
    .leaflet-popup-tip-container {
      width: 30px;
      height: 15px;
    }
    .leaflet-popup-tip {
      border-left: 15px solid transparent;
      border-right: 15px solid transparent;
      border-top: 15px solid rgba(0, 0, 0, 0.65);
    }
  </style>
</head>
<body>
<div id='map'></div>
<ul id='marker-list'></ul>
  <script>
  L.mapbox.accessToken = '<%= Rails.application.secrets.mapbox_token %>';
  // Initialize map frame with default zoom behavior disabled
  var map = L.mapbox.map('map', 'mapbox.streets', {doubleClickZoom: false})
    // Add custom zoom behavior (pan to center of double-click event)
    .on('dblclick', function(e) {
      map.setView(e.latlng, map.getZoom() + 1)
    });
  // Add empty feature layer to map frame
  var featureLayer = L.mapbox.featureLayer().addTo(map)

  // Build the map and table of contents
  loadFeatures()
  addZoomOnClick()
  addPopups()

  // Load features from Rails GeoJSON server
  function loadFeatures() {
    $.ajax({
      type: 'GET',
      dataType: 'json',
      url: '<%= story_path(@story) %>'})
    .done(function (geojson) { 
      // Load response GeoJSON into feature layer
      featureLayer.setGeoJSON(geojson);
      // Fit map to bounding coordinates of features, then zoom out a bit
      map.fitBounds(featureLayer.getBounds());
      // Todo: may want to add logic to zoom out one step, if the fitted view is extremely tight around the placemarks
      // map.setZoom(map.getZoom() - 1)
      // Build Table of Contents as features are loaded
      buildTableOfContents();
    });
  };

  // Add a listening event to each feature, to pan when clicked
  function addZoomOnClick() {
    featureLayer.on('click', function(e) {
      map.setView(e.layer.getLatLng(), map.getZoom() + 1);
      // Todo: add logic to offset the map center when the popup content is too large to fit in screen
      // map.panBy([110, -75])
    })
  };

  // Add custom HTML popups to each feature
  function addPopups() {
    featureLayer.on('layeradd', function(e) {
      var marker = e.layer;
      var feature = marker.feature;
      // Write popup HTML
      var content = '';
      var name = feature.properties.name;
      var description = feature.properties.description;
      var image = feature.properties.image;
      var link = feature.properties.link;
      if (image !== '' || link !== '') {
        content = content + '<style>.leaflet-popup-content-wrapper {width: 380px;}</style>'};
      content = content + '<h2>'+name+'</h2>'
      if (image !== '') {
        content = content + '<img src="'+image+'" alt="'+feature.properties.image_alt+'" />'};
      if (description !== '') {
          content = content + '<p>'+description+'</p>'};
      if (link !== '') {
          content = content + '<div class="truncate"><a href="'+link+'">'+link+'</a></div>'};
        marker.bindPopup(content, {
          closeButton: false
        });
    });
  };

  // For each feature, add an entry to the marker list, including the feature name and a click event which zooms to the feature's coordinates
  function buildTableOfContents() {
    var markerList = document.getElementById('marker-list');
    featureLayer.eachLayer(function(layer) {
      var item = markerList.appendChild(document.createElement('li'));
      item.innerHTML = layer.toGeoJSON().properties.name;
      item.onclick = function() {
        map.setView(layer.getLatLng());
        // Todo: add logic to only offset the map center when the popup content is too large to fit in screen
        // map.panBy([110, -75])
        layer.openPopup();
      };
    });
  };
  </script>
</body>
</html>